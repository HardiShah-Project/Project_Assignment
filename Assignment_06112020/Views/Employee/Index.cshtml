@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;

@model IPagedList<Assignment_06112020.Models.Employee>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
}

<div class="col-md-12">
    @using (Html.BeginForm("Index", "Employee", FormMethod.Get))
    {
        <p class="search">
            Search By: @Html.RadioButton("searchBy", "Name", true)<text>Name</text>
            @Html.RadioButton("searchBy", "Skils")<text>Skils</text>
            @Html.TextBox("search")
            <input type="submit" value="Search" id="submit" class="btn btn-info" />
        </p>
    }
    <div class="shadow-lg p-3 mb-5 bg-white rounded">
        <a class="btn btn-primary" id="addButton" href="/Employee/Create"><i class="fa fa-plus"></i> Add New</a>
        <div class="table-responsive">
            <table class="table table-striped table-bordered" style="width:100%" ;>
                <thead>
                    <tr class="link">
                        <th>
                            @Html.ActionLink("Name", "Index", new { sort = ViewBag.SortByName, searchBy = Context.Request.Query["searchBy"].ToString(), search = Context.Request.Query["search"].ToString() })
                        </th>
                        <th>
                            @Html.ActionLink("JoiningDate", "Index", new { sort = ViewBag.SortByJoiningDate })
                        </th>
                        <th>
                            @Html.ActionLink("ReleaseDate", "Index", new { sort = ViewBag.SortByReleaseDate })
                        </th>
                        <th>
                            @Html.ActionLink("Employee's Skils", "Index", new { sort = ViewBag.SortBySkils, searchBy = Context.Request.Query["searchBy"].ToString(), search = Context.Request.Query["search"].ToString() })
                        </th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                <tbody>
                    @if (Model.Count() == 0)
                    {
                        <tr>
                            <td colspan="6"> Records not found </td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var item in Model)
                        {
                            <tr id="row_@item.Code">

                                <td>
                                    @Html.DisplayFor(modelItem => item.Name, new { id = "txtName" })
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.JoiningDate, new { id = "txtJoiningDate" })
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReleaseDate, new { id = "txtReleaseDate" })
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Skils, new { id = "txtSkils" })
                                </td>
                                <td>
                                    <a class="btn btn-success" href="/Employee/Edit/@item.Code"> <i class="fa fa-pencil-square-o fa-2x "></i></a>
                                </td>
                                <td>
                                    <a class="btn btn-danger" href="#" id="ConfirmDelete" onclick="ConfirmDelete(@item.Code)"> <i class="fa fa-trash-o fa-2x"></i> </a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <partial name="_Delete" />
    <input type="hidden" id="hiddenId" />
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
        {
           page,
           searchBy = Context.Request.Query["searchBy"].ToString(),
           search = Context.Request.Query["search"].ToString(),
           sort = Context.Request.Query["sort"].ToString()
        }), new PagedListRenderOptionsBase()
         {
               Display = PagedListDisplayMode.IfNeeded,
               DisplayPageCountAndCurrentLocation = true,
               DisplayItemSliceAndTotal = true
          })
</div>











